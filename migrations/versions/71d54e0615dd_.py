"""empty message

Revision ID: 71d54e0615dd
Revises: 
Create Date: 2021-03-08 14:17:46.647327

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '71d54e0615dd'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('testimonials',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('False', sa.String(), nullable=True),
    sa.Column('image', sa.String(), nullable=False),
    sa.Column('shortDescription', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('firstName', sa.String(length=100), nullable=False),
    sa.Column('lastName', sa.String(length=100), nullable=False),
    sa.Column('password', sa.String(length=1000), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=False),
    sa.Column('country', sa.String(length=100), nullable=False),
    sa.Column('city', sa.String(length=100), nullable=False),
    sa.Column('zipCode', sa.String(length=100), nullable=False),
    sa.Column('addressLine1', sa.String(length=100), nullable=False),
    sa.Column('addressLine2', sa.String(length=100), nullable=True),
    sa.Column('registered_at', sa.DateTime(), nullable=True),
    sa.Column('userRole', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('causes',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('image', sa.String(length=255), nullable=False),
    sa.Column('shortDescription', sa.String(length=300), nullable=False),
    sa.Column('description', sa.String(length=1000), nullable=False),
    sa.Column('testmonialId', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['testmonialId'], ['testimonials.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('purchase_order',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('interestRate', sa.Integer(), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=False),
    sa.Column('fundingLimit', sa.Integer(), nullable=False),
    sa.Column('shortDescription', sa.String(length=200), nullable=False),
    sa.Column('description', sa.String(length=1000), nullable=False),
    sa.Column('ranking', sa.String(length=50), nullable=False),
    sa.Column('testmonialId', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['testmonialId'], ['testimonials.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('product_category',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('causeId', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('interestRate', sa.Integer(), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=False),
    sa.Column('fundingLimit', sa.Integer(), nullable=False),
    sa.Column('image', sa.String(), nullable=False),
    sa.Column('shortDescription', sa.String(length=200), nullable=False),
    sa.Column('description', sa.String(length=1000), nullable=False),
    sa.Column('ranking', sa.String(length=50), nullable=False),
    sa.Column('testmonialId', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['causeId'], ['causes.id'], ),
    sa.ForeignKeyConstraint(['testmonialId'], ['testimonials.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('investments',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('userId', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('invested_at', sa.DateTime(), nullable=True),
    sa.Column('productCategoryId', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('interestRate', sa.Integer(), nullable=False),
    sa.Column('supplyStatus', sa.String(), nullable=True),
    sa.Column('productCategory', sa.Boolean(), nullable=False),
    sa.Column('purchase_order', sa.Boolean(), nullable=False),
    sa.Column('InvestmentStatus', sa.String(), nullable=True),
    sa.Column('paymentStatus', sa.String(), nullable=True),
    sa.Column('payment_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['productCategoryId'], ['product_category.id'], ),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('supply_status',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('investmentId', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('step', sa.String(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['investmentId'], ['investments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('supply_status')
    op.drop_table('investments')
    op.drop_table('product_category')
    op.drop_table('purchase_order')
    op.drop_table('causes')
    op.drop_table('users')
    op.drop_table('testimonials')
    # ### end Alembic commands ###
